{"ast":null,"code":"import React,{useEffect}from\"react\";import InfoBar from\"../InfoBar/InfoBar\";import Input from\"../Input/Input\";import Messages from\"../Messages/Messages\";import{observer}from\"mobx-react\";import{OuterContainer,Container}from\"./Chat.Styled\";import io from\"socket.io-client\";import ChatViewModel from\"./ChatViewModel\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var chatViewModel;var socket;var Chat=observer(function(_ref){var sessionStore=_ref.sessionStore,messageStore=_ref.messageStore;chatViewModel=new ChatViewModel(sessionStore);var ENDPOINT=\"localhost:5000\";useEffect(function(){socket=io(ENDPOINT);chatViewModel.initialConnection(socket);if(sessionStore.error){alert(\"Somethig is wrong\");chatViewModel.gotoJoinRoom();}},[ENDPOINT,sessionStore.name,sessionStore.room]);useEffect(function(){chatViewModel.sessionMessage(socket);},[]);return/*#__PURE__*/_jsx(OuterContainer,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(InfoBar,{room:sessionStore.room,error:sessionStore.error}),/*#__PURE__*/_jsx(Messages,{messages:sessionStore.messages,name:sessionStore.name}),!sessionStore.error?/*#__PURE__*/_jsx(Input,{messageStore:messageStore,socket:socket}):null]})});});export default Chat;","map":{"version":3,"sources":["/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/src/UI/Chat/Chat.tsx"],"names":["React","useEffect","InfoBar","Input","Messages","observer","OuterContainer","Container","io","ChatViewModel","chatViewModel","socket","Chat","sessionStore","messageStore","ENDPOINT","initialConnection","error","alert","gotoJoinRoom","name","room","sessionMessage","messages"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,cAAT,CAAyBC,SAAzB,KAA0C,eAA1C,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,wFAEA,GAAIC,CAAAA,aAAJ,CACA,GAAIC,CAAAA,MAAJ,CAEA,GAAMC,CAAAA,IAAI,CAAGP,QAAQ,CAAC,cAAoC,IAAjCQ,CAAAA,YAAiC,MAAjCA,YAAiC,CAAnBC,YAAmB,MAAnBA,YAAmB,CACxDJ,aAAa,CAAG,GAAID,CAAAA,aAAJ,CAAkBI,YAAlB,CAAhB,CACA,GAAME,CAAAA,QAAQ,CAAG,gBAAjB,CAEAd,SAAS,CAAC,UAAM,CACdU,MAAM,CAAGH,EAAE,CAACO,QAAD,CAAX,CACAL,aAAa,CAACM,iBAAd,CAAgCL,MAAhC,EACA,GAAIE,YAAY,CAACI,KAAjB,CAAwB,CACtBC,KAAK,CAAC,mBAAD,CAAL,CACAR,aAAa,CAACS,YAAd,GACD,CACF,CAPQ,CAON,CAACJ,QAAD,CAAWF,YAAY,CAACO,IAAxB,CAA8BP,YAAY,CAACQ,IAA3C,CAPM,CAAT,CASApB,SAAS,CAAC,UAAM,CACdS,aAAa,CAACY,cAAd,CAA6BX,MAA7B,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,KAAC,cAAD,wBACE,MAAC,SAAD,yBACE,KAAC,OAAD,EAAS,IAAI,CAAEE,YAAY,CAACQ,IAA5B,CAAkC,KAAK,CAAER,YAAY,CAACI,KAAtD,EADF,cAGE,KAAC,QAAD,EAAU,QAAQ,CAAEJ,YAAY,CAACU,QAAjC,CAA2C,IAAI,CAAEV,YAAY,CAACO,IAA9D,EAHF,CAIG,CAACP,YAAY,CAACI,KAAd,cACC,KAAC,KAAD,EAAO,YAAY,CAAEH,YAArB,CAAmC,MAAM,CAAEH,MAA3C,EADD,CAEG,IANN,GADF,EADF,CAYD,CA7BoB,CAArB,CA+BA,cAAeC,CAAAA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\nimport { observer } from \"mobx-react\";\nimport { OuterContainer, Container } from \"./Chat.Styled\";\nimport io from \"socket.io-client\";\nimport ChatViewModel from \"./ChatViewModel\";\n\nlet chatViewModel: ChatViewModel;\nlet socket;\n\nconst Chat = observer(({ sessionStore, messageStore }) => {\n  chatViewModel = new ChatViewModel(sessionStore);\n  const ENDPOINT = \"localhost:5000\";\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    chatViewModel.initialConnection(socket);\n    if (sessionStore.error) {\n      alert(\"Somethig is wrong\");\n      chatViewModel.gotoJoinRoom();\n    }\n  }, [ENDPOINT, sessionStore.name, sessionStore.room]);\n\n  useEffect(() => {\n    chatViewModel.sessionMessage(socket);\n  }, []);\n\n  return (\n    <OuterContainer>\n      <Container>\n        <InfoBar room={sessionStore.room} error={sessionStore.error} />\n\n        <Messages messages={sessionStore.messages} name={sessionStore.name} />\n        {!sessionStore.error ? (\n          <Input messageStore={messageStore} socket={socket} />\n        ) : null}\n      </Container>\n    </OuterContainer>\n  );\n});\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}