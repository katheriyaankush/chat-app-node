{"ast":null,"code":"import _initializerDefineProperty from \"/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;\n\nimport { observable, makeObservable, action } from \"mobx\";\nlet SessionStore = (_class = class SessionStore {\n  constructor() {\n    _initializerDefineProperty(this, \"name\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"room\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"users\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"error\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"messages\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"message\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"isJoin\", _descriptor7, this);\n\n    makeObservable(this);\n  }\n\n  updateName(val) {\n    return this.name = val;\n  }\n\n  updateRoom(val) {\n    return this.room = val;\n  }\n\n  updateUsers(val) {\n    return this.users = val;\n  }\n\n  initialConnection(socket) {\n    const room = this.room;\n    const name = this.name;\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        return this.error = true;\n      }\n    });\n  }\n\n  sessionMessage(socket) {\n    const messageA = [];\n    socket.on(\"message\", message => {\n      messageA.push(message);\n      this.messages = messageA;\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      this.users = users;\n    });\n    return this.messages;\n  }\n\n  setMessage(val) {\n    return this.message = val;\n  }\n\n  isJoined(val) {\n    return this.isJoin = val;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"name\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"room\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"users\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"error\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"messages\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"message\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"isJoin\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"updateName\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"updateName\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateRoom\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"updateRoom\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateUsers\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"updateUsers\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"initialConnection\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"initialConnection\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"sessionMessage\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"sessionMessage\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setMessage\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setMessage\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isJoined\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"isJoined\"), _class.prototype)), _class);\nexport { SessionStore as default };","map":{"version":3,"sources":["/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/src/BusinessLogic/SessionStore.ts"],"names":["observable","makeObservable","action","SessionStore","constructor","updateName","val","name","updateRoom","room","updateUsers","users","initialConnection","socket","emit","error","sessionMessage","messageA","on","message","push","messages","setMessage","isJoined","isJoin"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,QAAmD,MAAnD;IAEqBC,Y,aAAN,MAAMA,YAAN,CAAmB;AAShCC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACZH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAEOI,EAAAA,UAAU,CAACC,GAAD,EAAM;AACtB,WAAQ,KAAKC,IAAL,GAAYD,GAApB;AACD;;AACOE,EAAAA,UAAU,CAACF,GAAD,EAAM;AACtB,WAAQ,KAAKG,IAAL,GAAYH,GAApB;AACD;;AACOI,EAAAA,WAAW,CAACJ,GAAD,EAAM;AACvB,WAAQ,KAAKK,KAAL,GAAaL,GAArB;AACD;;AAEOM,EAAAA,iBAAiB,CAACC,MAAD,EAAS;AAChC,UAAMJ,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMF,IAAI,GAAG,KAAKA,IAAlB;AACAM,IAAAA,MAAM,CAACC,IAAP,CAAY,MAAZ,EAAoB;AAAEP,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCM,KAAD,IAAW;AAC7C,UAAIA,KAAJ,EAAW;AACT,eAAQ,KAAKA,KAAL,GAAa,IAArB;AACD;AACF,KAJD;AAKD;;AAEOC,EAAAA,cAAc,CAACH,MAAD,EAAS;AAC7B,UAAMI,QAAa,GAAG,EAAtB;AACAJ,IAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAsBC,OAAD,IAAkB;AACrCF,MAAAA,QAAQ,CAACG,IAAT,CAAcD,OAAd;AACA,WAAKE,QAAL,GAAgBJ,QAAhB;AACD,KAHD;AAKAJ,IAAAA,MAAM,CAACK,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAEP,MAAAA;AAAF,KAAD,KAAe;AACnC,WAAKA,KAAL,GAAaA,KAAb;AACD,KAFD;AAGA,WAAO,KAAKU,QAAZ;AACD;;AAEOC,EAAAA,UAAU,CAAChB,GAAD,EAAM;AACtB,WAAQ,KAAKa,OAAL,GAAeb,GAAvB;AACD;;AAEOiB,EAAAA,QAAQ,CAACjB,GAAD,EAAM;AACpB,WAAQ,KAAKkB,MAAL,GAAclB,GAAtB;AACD;;AApD+B,C,sEAC/BN,U;;;;;WAAkB,E;;wEAClBA,U;;;;;WAAkB,E;;yEAClBA,U;;;;;WAAmB,E;;yEACnBA,U;;;;;WAAmB,K;;4EACnBA,U;;;;;WAAsB,E;;2EACtBA,U;;;;;WAAqB,E;;0EACrBA,U;;;;;WAAoB,K;;+DAMpBE,M,kJAGAA,M,mJAGAA,M,0JAIAA,M,6JAUAA,M,sJAaAA,M,gJAIAA,M;SAlDkBC,Y","sourcesContent":["import { observable, makeObservable, action } from \"mobx\";\n\nexport default class SessionStore {\n  @observable name = \"\";\n  @observable room = \"\";\n  @observable users = \"\";\n  @observable error = false;\n  @observable messages = \"\";\n  @observable message = \"\";\n  @observable isJoin = false;\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action updateName(val) {\n    return (this.name = val);\n  }\n  @action updateRoom(val) {\n    return (this.room = val);\n  }\n  @action updateUsers(val) {\n    return (this.users = val);\n  }\n\n  @action initialConnection(socket) {\n    const room = this.room;\n    const name = this.name;\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) {\n        return (this.error = true);\n      }\n    });\n  }\n\n  @action sessionMessage(socket) {\n    const messageA: any = [];\n    socket.on(\"message\", (message: any) => {\n      messageA.push(message);\n      this.messages = messageA;\n    });\n\n    socket.on(\"roomData\", ({ users }) => {\n      this.users = users;\n    });\n    return this.messages;\n  }\n\n  @action setMessage(val) {\n    return (this.message = val);\n  }\n\n  @action isJoined(val) {\n    return (this.isJoin = val);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}