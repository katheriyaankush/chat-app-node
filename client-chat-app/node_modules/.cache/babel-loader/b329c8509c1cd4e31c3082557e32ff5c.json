{"ast":null,"code":"import _initializerDefineProperty from \"/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor;\n\nimport { observable, makeObservable, action } from \"mobx\";\nlet MessageStore = (_class = class MessageStore {\n  constructor() {\n    _initializerDefineProperty(this, \"message\", _descriptor, this);\n\n    makeObservable(this);\n  }\n\n  setMessage(val) {\n    return this.message = val;\n  }\n\n  sendMessage(event, socket) {\n    event.preventDefault();\n\n    if (this.message) {\n      socket.emit(\"sendMessage\", this.message, () => this.message = \"\");\n    }\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"message\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setMessage\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setMessage\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"sendMessage\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"sendMessage\"), _class.prototype)), _class);\nexport { MessageStore as default };","map":{"version":3,"sources":["/Users/macbook/Documents/BlueJeans/chat-react-app/client-chat-app/src/BusinessLogic/MessageStore.ts"],"names":["observable","makeObservable","action","MessageStore","constructor","setMessage","val","message","sendMessage","event","socket","preventDefault","emit"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,QAAmD,MAAnD;IAEqBC,Y,aAAN,MAAMA,YAAN,CAAmB;AAGhCC,EAAAA,WAAW,GAAG;AAAA;;AACZH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAEOI,EAAAA,UAAU,CAACC,GAAD,EAAM;AACtB,WAAQ,KAAKC,OAAL,GAAeD,GAAvB;AACD;;AAEOE,EAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACjCD,IAAAA,KAAK,CAACE,cAAN;;AACA,QAAI,KAAKJ,OAAT,EAAkB;AAChBG,MAAAA,MAAM,CAACE,IAAP,CAAY,aAAZ,EAA2B,KAAKL,OAAhC,EAAyC,MAAO,KAAKA,OAAL,GAAe,EAA/D;AACD;AACF;;AAhB+B,C,yEAC/BP,U;;;;;WAAqB,E;;+DAMrBE,M,mJAIAA,M;SAXkBC,Y","sourcesContent":["import { observable, makeObservable, action } from \"mobx\";\n\nexport default class MessageStore {\n  @observable message = \"\";\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action setMessage(val) {\n    return (this.message = val);\n  }\n\n  @action sendMessage(event, socket) {\n    event.preventDefault();\n    if (this.message) {\n      socket.emit(\"sendMessage\", this.message, () => (this.message = \"\"));\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}